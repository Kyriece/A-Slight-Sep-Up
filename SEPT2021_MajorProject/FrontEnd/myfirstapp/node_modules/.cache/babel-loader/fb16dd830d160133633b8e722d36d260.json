{"ast":null,"code":"import axios from \"axios\";\nimport { GET_ERRORS, GET_PERSONS, GET_PERSON } from \"./types\";\nexport const createPerson = (person, history) => async dispatch => {\n  try {\n    const res = await axios.post(\"http://localhost:8080/api/person\", person);\n    history.push(\"/dashboard\");\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\nexport const getPersons = () => async dispatch => {\n  const res = await axios.get(\"/api/person/all\");\n  dispatch({\n    type: GET_PERSONS,\n    payload: res.data\n  });\n};\nexport const getPerson = (id, history) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/person/${id}`);\n    dispatch({\n      type: GET_PERSON,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};","map":{"version":3,"sources":["C:/Users/TechFast Australia/Desktop/New folder/A-Slight-Sep-Up/SEPT2021_MajorProject/frontend/myfirstapp/src/actions/personActions.js"],"names":["axios","GET_ERRORS","GET_PERSONS","GET_PERSON","createPerson","person","history","dispatch","res","post","push","err","type","payload","response","data","getPersons","get","getPerson","id","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,UAAlC,QAAoD,SAApD;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,MAAD,EAASC,OAAT,KAAqB,MAAMC,QAAN,IAAkB;AACjE,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,IAAN,CAAW,kCAAX,EAA+CJ,MAA/C,CAAlB;AACAC,IAAAA,OAAO,CAACI,IAAR,CAAa,YAAb;AACD,GAHD,CAGE,OAAOC,GAAP,EAAY;AACZJ,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEX,UADC;AAEPY,MAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFf,KAAD,CAAR;AAID;AACF,CAVM;AAWP,OAAO,MAAMC,UAAU,GAAG,MAAM,MAAMT,QAAN,IAAkB;AAChD,QAAMC,GAAG,GAAG,MAAMR,KAAK,CAACiB,GAAN,CAAU,iBAAV,CAAlB;AACAV,EAAAA,QAAQ,CAAC;AACPK,IAAAA,IAAI,EAAEV,WADC;AAEPW,IAAAA,OAAO,EAAEL,GAAG,CAACO;AAFN,GAAD,CAAR;AAID,CANM;AAQP,OAAO,MAAMG,SAAS,GAAG,CAACC,EAAD,EAAKb,OAAL,KAAiB,MAAMC,QAAN,IAAkB;AAC1D,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMR,KAAK,CAACiB,GAAN,CAAW,eAAcE,EAAG,EAA5B,CAAlB;AACAZ,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAET,UADC;AAEPU,MAAAA,OAAO,EAAEL,GAAG,CAACO;AAFN,KAAD,CAAR;AAID,GAND,CAME,OAAOK,KAAP,EAAc;AACdd,IAAAA,OAAO,CAACI,IAAR,CAAa,YAAb;AACD;AACF,CAVM","sourcesContent":["import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PERSONS, GET_PERSON } from \"./types\";\r\n\r\nexport const createPerson = (person, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.post(\"http://localhost:8080/api/person\", person);\r\n    history.push(\"/dashboard\");\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\nexport const getPersons = () => async dispatch => {\r\n  const res = await axios.get(\"/api/person/all\");\r\n  dispatch({\r\n    type: GET_PERSONS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const getPerson = (id, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/person/${id}`);\r\n    dispatch({\r\n      type: GET_PERSON,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}